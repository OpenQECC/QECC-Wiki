"use strict";(self.webpackChunkqecc_wiki=self.webpackChunkqecc_wiki||[]).push([[6628],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(r),m=a,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return r?n.createElement(f,o(o({ref:t},d),{},{components:r})):n.createElement(f,o({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8514:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const i={},o="Steane-7",l={unversionedId:"codes/Steane-7",id:"codes/Steane-7",title:"Steane-7",description:"Description",source:"@site/docs/codes/Steane-7.md",sourceDirName:"codes",slug:"/codes/Steane-7",permalink:"/QECC-Wiki/codes/Steane-7",draft:!1,editUrl:"https://github.com/Benzillaist/QECC-Wiki/docs/codes/Steane-7.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"Shor9",permalink:"/QECC-Wiki/codes/Shor-9"}},c={},s=[{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:2},{value:"Syndrome Circuit:",id:"syndrome-circuit",level:3},{value:"Benchmarking Results",id:"benchmarking-results",level:2},{value:"QASM Downloads",id:"qasm-downloads",level:2},{value:"Similar Codes",id:"similar-codes",level:2},{value:"References",id:"references",level:2}],d={toc:s},u="wrapper";function p(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"steane-7"},"Steane-7"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The Steane code is a quantum error-correcting code that encodes a single logical qubit into seven physical qubits."),(0,a.kt)("li",{parentName:"ul"},"This code is designed to correct for any single qubit error, which includes both bit-flip (analogous to classical bit errors) and phase-flip (a uniquely quantum error) errors.")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"Code Tableau:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"___XXXX\n_XX__XX\nX_X_X_X\n___ZZZZ\n_ZZ__ZZ\nZ_Z_Z_Z\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Number of qubits: N = 7"),(0,a.kt)("li",{parentName:"ul"},"Number of encoded bits: k = 1")),(0,a.kt)("h3",{id:"syndrome-circuit"},"Syndrome Circuit:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Steane-7 Syndrome Circuit",src:r(6207).Z,width:"5743",height:"2910"})),(0,a.kt)("h2",{id:"benchmarking-results"},"Benchmarking Results"),(0,a.kt)("p",null,"This code was tested with the following decoders:\n",(0,a.kt)("strong",{parentName:"p"},"Lookup table:")," Ran in 0.3263s\n",(0,a.kt)("img",{alt:"Steane-7 Truth Table PP",src:r(9664).Z,width:"500",height:"300"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Belief decoder:")," Ran in 7.398s"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Steane-7 Belief Decoder PP",src:r(313).Z,width:"500",height:"300"})),(0,a.kt)("h2",{id:""}),(0,a.kt)("h2",{id:"qasm-downloads"},"QASM Downloads"),(0,a.kt)("p",null,(0,a.kt)("a",{target:"_blank",href:r(3883).Z},"Encoding Circuit")),(0,a.kt)("h2",{id:"similar-codes"},"Similar Codes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://math.mit.edu/~shor/papers/good-codes.pdf"},"Shor-9")),": Degenerate CSS code designed to account for parity errors")),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("p",null,"Andrew Steane, Multiple Particle Interference and Quantum Error Correction, Proc.Roy.Soc.Lond. A452 (1996) 2551, ",(0,a.kt)("a",{parentName:"p",href:"https://doi.org/10.1098/rspa.1996.0136"},"DOI")))}p.isMDXComponent=!0},3883:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/files/Steane-7-encodingCircuit-06002461ca6c8e362f6edb383a656ccc.qasm"},6207:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Steane-7-codeplot-e86cc9ea6a6e364fde7517faf8f33a30.png"},313:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Steane-7-beliefa-62f6f1b60b68c009c0c1de9fcb7e841b.png"},9664:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Steane-7-lookuptable-9e5b3eea290760ca615f8009820819a4.png"}}]);